name: CI

env:
  GO_VERSION: "stable"
  GOLANGCI_LINT_VERSION: "latest"

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

jobs:
  lint:
    name: "Linting"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}

  unit-tests:
    name: "Unit testing"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run unit tests
        run: go test -cover -coverprofile=coverage.txt ./...

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: coverage.txt

  code-coverage:
    name: "Code coverage"
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: unit-tests
    permissions:
      contents: read
      actions: read # to download code coverage report
      pull-requests: write # to comment on the PR
    steps:
      - uses: fgrosse/go-coverage-report@v1.1.1
        with:
          coverage-artifact-name: "code-coverage"
          coverage-file-name: "coverage.txt"
